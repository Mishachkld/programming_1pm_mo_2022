#include <iostream>
#include <Logger.hpp>

// 1. Что такое static
// Особая область памяти, инициализируется 1 раз и существует все время жизни программы

void f()
{
    static int count = 0;
    count++;
    std::cout << count << std::endl;
}

// 2. Статические поля и функции класса
// a. Внутри функции обращаться можно только к статическим членам данных, другим статическим функциям-членам и любым другим функциям извне класса.
// b. Статические функции-члены имеют область видимости класса, в котором они находятся.
// c. Вы не имеете доступа к указателю this класса, потому что мы не создаем никакого объекта для вызова этой функции.

int main() {

    logInfo() << "test" << 123 << 3.4;
    // 1. logInfo(), return Log(INFO)
    // temp_log << "test" << 123 << 3.4;
    // m_ss = "";
    // 2. Отработает оператор <<
    // temp_log << 123 << 3.4
    // m_ss = "test"
    // 3. Отработает оператор <<
    // temp_log << 3.4
    // m_ss = "test123"
    // 4. Отработает оператор <<
    // temp_log
    // m_ss = "test1233.4"
    // 5. Destructor

    return 0;
}
